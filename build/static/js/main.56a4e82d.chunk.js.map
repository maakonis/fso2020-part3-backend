{"version":3,"sources":["components/Filter.js","components/Form.js","services/phoneService.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","handleFilter","value","onChange","Form","props","onSubmit","name","changeName","number","changeNumber","type","baseUrl","axios","get","then","response","data","newObj","post","objId","delete","newObject","put","Persons","persons","setPersons","handleDelete","event","personName","target","personId","find","person","id","window","confirm","phoneService","filter","catch","error","console","log","map","key","onClick","Notification","message","isError","className","App","useState","newName","setNewName","newNumber","setNewNumber","filterTerm","setFilterTerm","notification","setNotification","setIsError","React","useEffect","allNotes","filteredPersons","toLowerCase","includes","e","preventDefault","entryIndex","indexOf","newPerson","concat","setTimeout","existingPerson","updateNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56a4e82d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Filter({handleFilter, value}) {\n    return <div>filter shown with <input value={value} onChange={handleFilter} /></div>\n}\n\nexport default Filter;","import React from 'react';\n\nfunction Form(props) {\n    return (\n        <form onSubmit={props.onSubmit}>\n        <h2>add a new</h2>\n        <div>\n          name: <input value={props.name} onChange={props.changeName} />\n        </div>\n        <div>\n          number: <input value={props.number} onChange={props.changeNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n    );\n}\n\nexport default Form;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObj) => {\n    const request = axios.post(baseUrl, newObj)\n    return request.then(response => response.data)\n}\n\nconst remove = (objId) => axios.delete(`${baseUrl}/${objId}`)\n\nconst update = (objId, newObject) => {\n    const request = axios.put(`${baseUrl}/${objId}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react';\nimport phoneService from '../services/phoneService'\n\nfunction Persons({ persons, setPersons }) {\n\n    const handleDelete = (event) => {\n        const personName = event.target.value\n        const personId = persons.find(person => person.name === personName).id\n        if (window.confirm(`Delete ${event.target.value}?`)) {\n            phoneService.remove(personId)\n                .then(() => {\n                    return setPersons(persons\n                        .filter(person => person.id !== personId))\n                })\n                .catch(error => console.log('Entry not in db - already deleted or did not exist', error))\n\n        }\n    }\n\n    return (\n        <div>\n            {persons.map(person => {\n                return (<div key={person.name}>\n                    <span>{person.name} {person.number} </span>\n                    <button value={person.name} onClick={handleDelete}>delete</button>\n                </div>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({message, isError}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={isError ? \"error\" : \"notification\"}>\n            {message}\n        </div>\n    );\n}\n\nexport default Notification;","import React, { useState } from 'react';\nimport Filter from './Filter'\nimport Form from './Form'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport phoneService from '../services/phoneService'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterTerm, setFilterTerm] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  React.useEffect(() => {\n    phoneService.getAll()\n      .then(allNotes => setPersons(allNotes))\n  }, [])\n\n  const changeName = (e) => setNewName(e.target.value)\n  const changeNumber = (e) => setNewNumber(e.target.value)\n  const handleFilter = (e) => setFilterTerm(e.target.value.toLowerCase())\n\n  const filteredPersons = persons\n    .filter(person => person.name.toLowerCase()\n      .includes(filterTerm))\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const entryIndex = persons.map(person => person.name).indexOf(newName)\n    if (entryIndex === -1) {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      phoneService.create(newPerson)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setNotification(`${newPerson.name} has been added to the phonebook.`)\n          setTimeout(() => setNotification(null), 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotification(error.response.data.error)\n          setIsError(true)\n        })\n      setNewName('')\n      setNewNumber('')\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const existingPerson = persons[entryIndex]\n        const updateNumber = { ...existingPerson, number: newNumber }\n        phoneService.update(existingPerson.id, updateNumber)\n          .then(response => {\n            setPersons(persons\n              .map(person => person.id !== existingPerson.id ? person : response))\n            setNotification(`${response.name}'s phone number has been updated.`)\n            setIsError(false)\n            setTimeout(() => setNotification(null), 5000)\n          })\n          .catch(() => {\n            setNotification(`${existingPerson.name} has already been deleted from the server.`)\n            setIsError(true)\n          })\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} isError={isError} />\n      <Filter value={filterTerm} handleFilter={handleFilter} />\n      <Form onSubmit={handleSubmit}\n        name={newName}\n        changeName={changeName}\n        number={newNumber}\n        changeNumber={changeNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} setPersons={setPersons} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}